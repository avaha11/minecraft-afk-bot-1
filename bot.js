const mineflayer = require('mineflayer');
const { pathfinder, Movements, goals } = require('mineflayer-pathfinder');
const TelegramBot = require('node-telegram-bot-api');
const net = require('net');
require('dotenv').config();

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const config = {
    minecraft: {
        host: process.env.MC_HOST || 'cis_land.aternos.me',
        port: parseInt(process.env.MC_PORT) || 29993,
        username: process.env.MC_USERNAME || 'AFKBot',
        version: process.env.MC_VERSION || '1.20.1'
    },
    telegram: {
        token: process.env.TELEGRAM_BOT_TOKEN || '8217202606:AAH6xOeUt3nt9Ogc_WAXsaw2DsvpgpCAShA',
        chatId: process.env.TELEGRAM_CHAT_ID || '5233967167'
    }
};

class MinecraftAFKBot {
    constructor() {
        this.bot = null;
        this.isConnected = false;
        this.telegramBot = new TelegramBot(config.telegram.token, { polling: true });
        this.afkInterval = null;
        this.followInterval = null;
        this.isFollowing = false;
        this.reconnectAttempts = 0;
        this.maxReconnectAttempts = 5; // –ú–∞–∫—Å–∏–º—É–º 5 –ø–æ–ø—ã—Ç–æ–∫
        this.baseReconnectDelay = 10000; // –ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ 10 —Å–µ–∫—É–Ω–¥
        this.setupTelegramCommands();
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
    async checkServerAvailability() {
        return new Promise((resolve, reject) => {
            const client = new net.Socket();
            const timeout = 5000;
            client.setTimeout(timeout);

            client.connect(config.minecraft.port, config.minecraft.host, () => {
                resolve(true);
                client.destroy();
            });

            client.on('error', (err) => {
                resolve(false);
                client.destroy();
            });

            client.on('timeout', () => {
                resolve(false);
                client.destroy();
            });
        });
    }

    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Minecraft —Å–µ—Ä–≤–µ—Ä—É
    async connectToMinecraft() {
        this.sendTelegramMessage('üîÑ –ü—Ä–æ–≤–µ—Ä—è—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞...');

        const isAvailable = await this.checkServerAvailability();

        if (!isAvailable) {
            this.sendTelegramMessage('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ –µ–≥–æ –≤ –ø–∞–Ω–µ–ª–∏ Aternos (aternos.org) –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ /connect.');
            return;
        }

        this.sendTelegramMessage('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É Minecraft...');

        this.bot = mineflayer.createBot({
            host: config.minecraft.host,
            port: config.minecraft.port,
            username: config.minecraft.username,
            version: config.minecraft.version,
            auth: 'offline',
            skipValidation: true,
            hideErrors: false,
            checkTimeoutInterval: 30 * 1000,
            keepAlive: true
        });

        this.bot.loadPlugin(pathfinder);
        this.setupMinecraftEvents();
    }

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    async attemptReconnect() {
        if (this.reconnectAttempts >= this.maxReconnectAttempts) {
            this.sendTelegramMessage('‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /connect –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.');
            this.reconnectAttempts = 0;
            return;
        }

        const delay = Math.min(this.baseReconnectDelay * Math.pow(2, this.reconnectAttempts), 60000); // –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, –º–∞–∫—Å. 60 —Å–µ–∫—É–Ω–¥
        this.reconnectAttempts++;
        this.sendTelegramMessage(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è ${this.reconnectAttempts}/${this.maxReconnectAttempts} —á–µ—Ä–µ–∑ ${delay/1000} —Å–µ–∫—É–Ω–¥...`);

        setTimeout(async () => {
            const isAvailable = await this.checkServerAvailability();
            if (!isAvailable) {
                this.sendTelegramMessage('‚ùå –°–µ—Ä–≤–µ—Ä –≤—Å—ë –µ—â—ë –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—è—é —Å–Ω–æ–≤–∞...');
                this.attemptReconnect();
                return;
            }

            await this.connectToMinecraft();
        }, delay);
    }

    // –°–æ–±—ã—Ç–∏—è Minecraft –±–æ—Ç–∞
    setupMinecraftEvents() {
        this.bot.on('login', () => {
            this.isConnected = true;
            this.reconnectAttempts = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
            console.log(`–ü–æ–¥–∫–ª—é—á–µ–Ω –∫–∞–∫ ${this.bot.username}`);
            this.sendTelegramMessage(`‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É –∫–∞–∫ ${this.bot.username}`);
            this.startAFKMode();
        });

        this.bot.on('spawn', () => {
            console.log('–ó–∞—Å–ø–∞–≤–Ω–∏–ª—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ');
            this.sendTelegramMessage('üéÆ –ó–∞—Å–ø–∞–≤–Ω–∏–ª—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –Ω–∞—á–∏–Ω–∞—é AFK —Ä–µ–∂–∏–º');
            const defaultMove = new Movements(this.bot);
            this.bot.pathfinder.setMovements(defaultMove);
        });

        this.bot.on('chat', (username, message) => {
            if (username === this.bot.username) return;
            console.log(`<${username}> ${message}`);
            if (message.includes(this.bot.username) || message.includes('@') || message.includes('–∞–¥–º–∏–Ω')) {
                this.sendTelegramMessage(`üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${username}: ${message}`);
            }
        });

        this.bot.on('whisper', (username, message) => {
            console.log(`${username} —à–µ–ø—á–µ—Ç: ${message}`);
            this.sendTelegramMessage(`üë§ –ü—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${username}: ${message}`);
        });

        this.bot.on('health', () => {
            if (this.bot.health < 10) {
                this.sendTelegramMessage(`‚ö†Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ –Ω–∏–∑–∫–æ–µ: ${this.bot.health}/20`);
            }
        });

        this.bot.on('death', () => {
            console.log('–ë–æ—Ç —É–º–µ—Ä');
            this.sendTelegramMessage('üíÄ –ë–æ—Ç —É–º–µ—Ä! –ü—ã—Ç–∞—é—Å—å –≤–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è...');
            this.stopFollowing();
            setTimeout(() => {
                if (this.bot) {
                    this.bot.chat('/spawn');
                }
            }, 3000);
        });

        this.bot.on('kicked', (reason) => {
            console.log(`–ö–∏–∫–Ω—É—Ç —Å —Å–µ—Ä–≤–µ—Ä–∞: ${reason}`);
            this.sendTelegramMessage(`üëÆ –ö–∏–∫–Ω—É—Ç —Å —Å–µ—Ä–≤–µ—Ä–∞: ${reason}`);
            this.isConnected = false;
            this.stopFollowing();
            this.attemptReconnect();
        });

        this.bot.on('error', (err) => {
            console.error('–û—à–∏–±–∫–∞ –±–æ—Ç–∞:', err);
            this.sendTelegramMessage(`‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞: ${err.message}`);
            this.isConnected = false;
            this.stopFollowing();
            this.attemptReconnect();
        });

        this.bot.on('end', (reason) => {
            console.log('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ:', reason);
            this.sendTelegramMessage(`üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º –∑–∞–∫—Ä—ã—Ç–æ: ${reason || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞'}`);
            this.isConnected = false;
            this.stopAFKMode();
            this.stopFollowing();
            if (reason !== 'disconnect.quitting') {
                this.attemptReconnect();
            }
        });
    }

    // AFK —Ä–µ–∂–∏–º
    startAFKMode() {
        this.afkInterval = setInterval(() => {
            if (this.isConnected && this.bot && !this.isFollowing) {
                this.bot.look(
                    this.bot.entity.yaw + (Math.random() - 0.5) * 0.1,
                    this.bot.entity.pitch + (Math.random() - 0.5) * 0.1
                );
                if (Math.random() < 0.1) {
                    this.bot.setControlState('jump', true);
                    setTimeout(() => {
                        if (this.bot) {
                            this.bot.setControlState('jump', false);
                        }
                    }, 100);
                }
            }
        }, 30000);
    }

    stopAFKMode() {
        if (this.afkInterval) {
            clearInterval(this.afkInterval);
            this.afkInterval = null;
        }
    }

    // –°–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞ –∏–≥—Ä–æ–∫–æ–º
    followPlayer(playerName) {
        const player = this.bot.players[playerName];
        if (!player) {
            this.sendTelegramMessage(`‚ùå –ò–≥—Ä–æ–∫ ${playerName} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ`);
            return;
        }

        this.isFollowing = true;
        this.stopAFKMode();
        this.sendTelegramMessage(`üö∂ –ù–∞—á–∏–Ω–∞—é —Å–ª–µ–¥–æ–≤–∞—Ç—å –∑–∞ ${playerName}`);

        this.followInterval = setInterval(() => {
            if (!this.isConnected || !this.bot || !this.isFollowing) return;

            const target = this.bot.players[playerName]?.entity;
            if (!target) {
                this.sendTelegramMessage(`‚ùå –ò–≥—Ä–æ–∫ ${playerName} –±–æ–ª—å—à–µ –Ω–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ`);
                this.stopFollowing();
                return;
            }

            const { x, y, z } = target.position;
            const goal = new goals.GoalNear(x, y, z, 2);
            this.bot.pathfinder.setGoal(goal);
        }, 1000);
    }

    stopFollowing() {
        if (this.followInterval) {
            clearInterval(this.followInterval);
            this.followInterval = null;
        }
        this.isFollowing = false;
        if (this.bot && this.isConnected) {
            this.bot.pathfinder.setGoal(null);
            this.startAFKMode();
        }
        this.sendTelegramMessage('üõë –ü—Ä–µ–∫—Ä–∞—Ç–∏–ª —Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞ –∏–≥—Ä–æ–∫–æ–º');
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ Telegram –±–æ—Ç–∞
    setupTelegramCommands() {
        this.telegramBot.onText(/\/start/, (msg) => {
            const welcomeMessage = `
ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Minecraft AFK –±–æ—Ç–æ–º!

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/connect - –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É
/disconnect - –û—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
/reconnect - –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
/ping - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
/status - –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞
/pos - –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
/health - –ó–¥–æ—Ä–æ–≤—å–µ –∏ –≥–æ–ª–æ–¥
/players - –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
/say <—Ç–µ–∫—Å—Ç> - –ù–∞–ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç
/tp <–∏–≥—Ä–æ–∫> - –¢–µ–ª–µ–ø–æ—Ä—Ç –∫ –∏–≥—Ä–æ–∫—É
/follow <–Ω–∏–∫> - –°–ª–µ–¥–æ–≤–∞—Ç—å –∑–∞ –∏–≥—Ä–æ–∫–æ–º
/stopfollow - –ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å —Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
/help - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å
            `;
            this.telegramBot.sendMessage(msg.chat.id, welcomeMessage);
        });

        this.telegramBot.onText(/\/connect/, async (msg) => {
            if (!this.isConnected) {
                this.reconnectAttempts = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–ø—ã—Ç–∫–∏ –ø—Ä–∏ —Ä—É—á–Ω–æ–º /connect
                await this.connectToMinecraft();
            } else {
                this.telegramBot.sendMessage(msg.chat.id, '‚úÖ –ë–æ—Ç —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É');
            }
        });

        this.telegramBot.onText(/\/reconnect/, (msg) => {
            if (this.isConnected && this.bot) {
                this.bot.quit('–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...');
            }
            this.reconnectAttempts = 0;
            setTimeout(() => {
                this.connectToMinecraft();
            }, 2000);
        });

        this.telegramBot.onText(/\/ping/, async (msg) => {
            this.sendTelegramMessage('üèì –ü—Ä–æ–≤–µ—Ä—è—é —Å–µ—Ä–≤–µ—Ä...');
            const isAvailable = await this.checkServerAvailability();
            if (isAvailable) {
                this.telegramBot.sendMessage(msg.chat.id, `‚úÖ –°–µ—Ä–≤–µ—Ä ${config.minecraft.host} –¥–æ—Å—Ç—É–ø–µ–Ω`);
            } else {
                this.telegramBot.sendMessage(msg.chat.id, '‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–æ—Ñ—Ñ–ª–∞–π–Ω –∏–ª–∏ —Ç–∞–π–º-–∞—É—Ç)');
            }
        });

        this.telegramBot.onText(/\/disconnect/, (msg) => {
            if (this.isConnected && this.bot) {
                this.bot.quit('–û—Ç–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ Telegram');
                this.sendTelegramMessage('üëã –û—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞');
            } else {
                this.telegramBot.sendMessage(msg.chat.id, '‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É');
            }
        });

        this.telegramBot.onText(/\/status/, (msg) => {
            if (this.isConnected && this.bot) {
                const status = `
üü¢ –°—Ç–∞—Ç—É—Å: –û–Ω–ª–∞–π–Ω
üéÆ –°–µ—Ä–≤–µ—Ä: ${config.minecraft.host}
üë§ –ù–∏–∫: ${this.bot.username}
‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: ${this.bot.health}/20
üçñ –ì–æ–ª–æ–¥: ${this.bot.food}/20
üìç –ü–æ–∑–∏—Ü–∏—è: ${Math.floor(this.bot.entity.position.x)}, ${Math.floor(this.bot.entity.position.y)}, ${Math.floor(this.bot.entity.position.z)}
                `;
                this.telegramBot.sendMessage(msg.chat.id, status);
            } else {
                this.telegramBot.sendMessage(msg.chat.id, 'üî¥ –°—Ç–∞—Ç—É—Å: –û—Ñ–ª–∞–π–Ω');
            }
        });

        this.telegramBot.onText(/\/say (.+)/, (msg, match) => {
            if (this.isConnected && this.bot) {
                const message = match[1];
                this.bot.chat(message);
                this.telegramBot.sendMessage(msg.chat.id, `üì¢ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç: ${message}`);
            } else {
                this.telegramBot.sendMessage(msg.chat.id, '‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É');
            }
        });

        this.telegramBot.onText(/\/tp (.+)/, (msg, match) => {
            if (this.isConnected && this.bot) {
                const playerName = match[1];
                this.bot.chat(`/tp ${playerName}`);
                this.telegramBot.sendMessage(msg.chat.id, `üöÄ –¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É—é—Å—å –∫ ${playerName}`);
            } else {
                this.telegramBot.sendMessage(msg.chat.id, '‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É');
            }
        });

        this.telegramBot.onText(/\/pos/, (msg) => {
            if (this.isConnected && this.bot) {
                const pos = this.bot.entity.position;
                const message = `üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: X: ${Math.floor(pos.x)}, Y: ${Math.floor(pos.y)}, Z: ${Math.floor(pos.z)}`;
                this.telegramBot.sendMessage(msg.chat.id, message);
            } else {
                this.telegramBot.sendMessage(msg.chat.id, '‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É');
            }
        });

        this.telegramBot.onText(/\/health/, (msg) => {
            if (this.isConnected && this.bot) {
                const message = `‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: ${this.bot.health}/20\nüçñ –ì–æ–ª–æ–¥: ${this.bot.food}/20`;
                this.telegramBot.sendMessage(msg.chat.id, message);
            } else {
                this.telegramBot.sendMessage(msg.chat.id, '‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É');
            }
        });

        this.telegramBot.onText(/\/players/, (msg) => {
            if (this.isConnected && this.bot) {
                const players = Object.keys(this.bot.players).filter(name => name !== this.bot.username);
                const message = players.length > 0 
                    ? `üë• –ò–≥—Ä–æ–∫–∏ –æ–Ω–ª–∞–π–Ω (${players.length}): ${players.join(', ')}`
                    : 'üë• –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤';
                this.telegramBot.sendMessage(msg.chat.id, message);
            } else {
                this.telegramBot.sendMessage(msg.chat.id, '‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É');
            }
        });

        this.telegramBot.onText(/\/follow (.+)/, (msg, match) => {
            if (this.isConnected && this.bot) {
                const playerName = match[1];
                this.followPlayer(playerName);
            } else {
                this.telegramBot.sendMessage(msg.chat.id, '‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É');
            }
        });

        this.telegramBot.onText(/\/stopfollow/, (msg) => {
            if (this.isConnected && this.bot && this.isFollowing) {
                this.stopFollowing();
            } else {
                this.telegramBot.sendMessage(msg.chat.id, '‚ùå –ë–æ—Ç –Ω–µ —Å–ª–µ–¥—É–µ—Ç –∑–∞ –∏–≥—Ä–æ–∫–æ–º –∏–ª–∏ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω');
            }
        });

        this.telegramBot.onText(/\/help/, (msg) => {
            const helpMessage = `
üÜò –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:

üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:
/connect - –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É
/disconnect - –û—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
/reconnect - –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
/ping - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞

üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
/status - –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞
/pos - –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
/health - –ó–¥–æ—Ä–æ–≤—å–µ –∏ –≥–æ–ª–æ–¥
/players - –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤

üéÆ –î–µ–π—Å—Ç–≤–∏—è:
/say <—Ç–µ–∫—Å—Ç> - –ù–∞–ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç
/tp <–∏–≥—Ä–æ–∫> - –¢–µ–ª–µ–ø–æ—Ä—Ç –∫ –∏–≥—Ä–æ–∫—É
/follow <–Ω–∏–∫> - –°–ª–µ–¥–æ–≤–∞—Ç—å –∑–∞ –∏–≥—Ä–æ–∫–æ–º
/stopfollow - –ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å —Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ

‚ÑπÔ∏è –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –ø—Ä–∏ –∫–∏–∫–µ –∏–ª–∏ —Å–±–æ–µ (–¥–æ 5 –ø–æ–ø—ã—Ç–æ–∫). –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –æ—Ñ—Ñ–ª–∞–π–Ω, –∑–∞–ø—É—Å—Ç–∏—Ç–µ –µ–≥–æ –≤ –ø–∞–Ω–µ–ª–∏ Aternos!
            `;
            this.telegramBot.sendMessage(msg.chat.id, helpMessage);
        });
    }

    sendTelegramMessage(message) {
        if (config.telegram.chatId && config.telegram.chatId !== 'YOUR_CHAT_ID') {
            this.telegramBot.sendMessage(config.telegram.chatId, message);
        }
    }

    start() {
        console.log('ü§ñ Minecraft AFK Bot –∑–∞–ø—É—â–µ–Ω!');
        console.log('üì± Telegram –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
        this.sendTelegramMessage('üöÄ Minecraft AFK Bot –∑–∞–ø—É—â–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥');
    }
}

const afkBot = new MinecraftAFKBot();
afkBot.start();

process.on('SIGINT', () => {
    console.log('–ó–∞–∫—Ä—ã—Ç–∏–µ –±–æ—Ç–∞...');
    if (afkBot.bot) {
        afkBot.bot.quit('–ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω');
    }
    process.exit(0);
});